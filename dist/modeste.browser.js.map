{"version":3,"file":"modeste.browser.js","sources":["../src/constants.js","../src/utils/strictEqual.js","../src/component/shouldUpdateData.js","../src/component/shouldUpdateProps.js","../src/utils/shallowCompare.js","../src/component/registerHooks.js","../src/component/emitHook.js","../src/utils/generateId.js","../src/component/generateScope.js","../src/dom/addStyles.js","../src/render/tag.js","../src/render/component.js","../src/dom/prepareVDom.js","../src/utils/toKebabCase.js","../src/component/createComponent.js","../src/component/emitMount.js","../src/dom/createDom.js","../src/dom/updateComponentDom.js","../src/component/setProps.js","../src/dom/updateDom.js","../src/dom/sameTypeAndTag.js","../src/component/removeChild.js","../src/utils/ModesteError.js","../src/component/render.js","../src/component/Component.js","../src/component/registerComponent.js","../src/main.js"],"sourcesContent":["export const ROOT_NAME = 'modesteRoot';\nexport const INTERNAL_VAR_NAME = '__modesteInternal';\n\nexport const COMMENT_NODE = window.Node.COMMENT_NODE;\nexport const ELEMENT_NODE = window.Node.ELEMENT_NODE;\nexport const TEXT_NODE = window.Node.TEXT_NODE;\n","export default function strictEqual(a, b) {\n  return a === b;\n}\n","import strictEqual from '../utils/strictEqual';\n\nexport default function shouldUpdateData(oldValue, newValue) {\n  return !strictEqual(oldValue, newValue);\n}\n","import shallowCompare from '../utils/shallowCompare';\n\nexport default function shouldUpdateProps(oldProps, newProps) {\n  return !shallowCompare(oldProps, newProps);\n}\n","import strictEqual from './strictEqual';\n\nexport default function shallowCompare(a, b) {\n  let aKeys = Object.keys(a);\n  let bKeys = Object.keys(b);\n\n  if (aKeys.length !== bKeys.length) return false;\n\n  for (let i = 0; i < aKeys.length; i++) {\n    let key = aKeys[i];\n    let index = bKeys.indexOf(key);\n\n    if (index < 0) return false;\n    if (!strictEqual(a[key], b[key])) return false;\n  }\n\n  return true;\n}\n","import { INTERNAL_VAR_NAME as m } from '../constants';\n\nconst HOOKS = [\n  'willCreate',\n  'didCreate',\n  'willMount',\n  'didMount',\n  'willUpdate',\n  'didUpdate',\n  'willRemove',\n  'didRemove',\n  'shouldUpdateData',\n  'shouldUpdateProps'\n];\n\nexport default function registerHooks(component, manifest) {\n  HOOKS.forEach(hook => {\n    if (manifest[hook]) component[m][hook] = manifest[hook].bind(component);\n  });\n}\n","import { INTERNAL_VAR_NAME as m } from '../constants';\n\nexport default function emitHook(component, hook) {\n  if (component[m][hook]) component[m][hook]();\n}\n","export default function generateId(maxValue, store, middleware) {\n  let id;\n\n  do {\n    id = (Math.random() * maxValue).toFixed(0);\n    if (middleware) id = middleware(id);\n  } while (store[id]);\n\n  store[id] = true;\n\n  return id;\n}\n","import generateId from '../utils/generateId';\n\nconst scopes = {};\n\nexport default function generateScope(name) {\n  return generateId(1000000, scopes, id => `__${name}_${id}__`);\n}\n","export default function addStyles(style, scope) {\n  if (!style) return;\n\n  let styleElement = document.createElement('style');\n\n  let regex = /:\\$/gm;\n  let repl = '.' + scope;\n\n  styleElement.textContent = style.replace(regex, repl);\n\n  document.head.appendChild(styleElement);\n\n  return styleElement;\n}\n","export default function tag(tag, opts, children) {\n  let props = {};\n  let attrs = {};\n  let node = { tag, props, attrs, children };\n\n  if (opts) {\n    Object.keys(opts).forEach(key => {\n      switch (key[0]) {\n        case '_':\n          attrs[key.substr(1)] = opts[key];\n          break;\n        case '$':\n          node[key.substr(1)] = opts[key];\n          break;\n        default:\n          props[key] = opts[key];\n      }\n    });\n  }\n\n  return node;\n}\n","export default function component(component, opts) {\n  let props = {};\n  let node = { component, props };\n\n  if (opts) {\n    Object.keys(opts).forEach(key => {\n      switch (key[0]) {\n        case '$':\n          node[key.substr(1)] = opts[key];\n          break;\n        default:\n          props[key] = opts[key];\n      }\n    });\n  }\n\n  return node;\n}\n","import toKebabCase from '../utils/toKebabCase';\n\nexport default function prepareVDom(vDom, scope) {\n  if (!vDom || typeof vDom === 'string') return;\n  if (!vDom.children) vDom.children = [];\n  if (!vDom.props) vDom.props = {};\n\n  if (!vDom.component) {\n    if (!vDom.attrs) vDom.attrs = {};\n    else {\n      let kebabAttrs = {};\n\n      Object.keys(vDom.attrs).forEach(attr => {\n        kebabAttrs[toKebabCase(attr)] = vDom.attrs[attr];\n      });\n\n      vDom.attrs = kebabAttrs;\n    }\n\n    if (vDom.props.className) {\n      delete vDom.attrs.class;\n      vDom.props.className = scope + ' ' + vDom.props.className;\n    } else {\n      if (!vDom.attrs.class) vDom.props.className = scope;\n      else vDom.attrs.class = scope + ' ' + vDom.attrs.class;\n    }\n  }\n}\n","export default function toKebabCase(str) {\n  return str.replace(/([A-Z])/g, '-$1').toLowerCase();\n}\n","import { INTERNAL_VAR_NAME as m } from '../constants';\n\nexport default function createComponent(name, props, parent) {\n  if (parent[m].factories[name]) {\n    return parent[m].factories[name](props, parent);\n  }\n\n  return parent[m].app.factories[name](props, parent);\n}\n","import { INTERNAL_VAR_NAME as m } from '../constants';\nimport emitHook from './emitHook';\n\nexport default function emitMount(component) {\n  let children = component[m].children;\n  Object.keys(children).forEach(key => emitMount(children[key]));\n\n  component[m].mounted = true;\n  emitHook(component, 'didMount');\n}\n","import { INTERNAL_VAR_NAME as m } from '../constants';\nimport prepareVDom from './prepareVDom';\nimport createComponent from '../component/createComponent';\nimport render from '../component/render';\nimport emitMount from '../component/emitMount';\n\nexport default function createDom(vDom, parent) {\n  prepareVDom(vDom, parent[m].scope);\n\n  if (!vDom) {\n    return document.createComment('');\n  }\n\n  switch (typeof vDom) {\n    case 'string':\n      return document.createTextNode(vDom);\n\n    case 'object':\n      if (vDom.component) {\n        let component = createComponent(vDom.component, vDom.props, parent);\n\n        if (vDom.ref) vDom.ref(component);\n\n        render(component);\n        return component[m].dom;\n      }\n\n      let dom = document.createElement(vDom.tag);\n\n      dom[m] = {};\n      dom[m].attrs = {};\n      dom[m].props = {};\n\n      Object.keys(vDom.attrs).forEach(attr => {\n        if (vDom.attrs[attr] !== null) {\n          dom.setAttribute(attr, vDom.attrs[attr]);\n          dom[m].attrs[attr] = vDom.attrs[attr];\n        }\n      });\n\n      Object.keys(vDom.props).forEach(prop => {\n        if (vDom.props[prop] !== null) {\n          dom[prop] = vDom.props[prop];\n          dom[m].props[prop] = vDom.props[prop];\n        }\n      });\n\n      vDom.children.forEach(child => {\n        let childDom = createDom(child, parent);\n        dom.appendChild(childDom);\n\n        if (parent[m].mounted && childDom[m] && childDom[m].id) {\n          emitMount(parent[m].children[id]);\n        }\n      });\n\n      if (vDom.ref) vDom.ref(dom);\n\n      return dom;\n  }\n}\n","import { INTERNAL_VAR_NAME as m } from '../constants';\nimport createComponent from '../component/createComponent';\nimport setProps from '../component/setProps';\nimport render from '../component/render';\nimport emitMount from '../component/emitMount';\n\nexport default function updateComponentDom(dom, vDom, parent) {\n  if (dom[m] && dom[m].id) {\n    let id = dom[m].id;\n    let component = parent[m].children[id];\n\n    if (!vDom.props) vDom.props = {};\n\n    if (component[m].name === vDom.component) {\n      component[m].dom = dom;\n      setProps(component, vDom.props);\n\n      if (vDom.ref) vDom.ref(component);\n      return;\n    } else parent[m].removeChild(id);\n  }\n\n  let component = createComponent(vDom.component, vDom.props, parent);\n  component[m].dom = dom;\n\n  if (vDom.ref) vDom.ref(component);\n\n  render(component);\n\n  if (parent[m].mounted) emitMount(component);\n}\n","import { INTERNAL_VAR_NAME as m } from '../constants';\nimport render from '../component/render';\n\nexport default function setProps(component, props) {\n  if (component[m].shouldUpdateProps(component.props, props)) {\n    component[m].props = props;\n    render(component);\n  }\n}\n","import { INTERNAL_VAR_NAME as m, ELEMENT_NODE, TEXT_NODE } from '../constants';\nimport prepareVDom from './prepareVDom';\nimport sameTypeAndTag from './sameTypeAndTag';\nimport updateComponentDom from './updateComponentDom';\nimport createDom from './createDom';\nimport removeChild from '../component/removeChild';\nimport emitMount from '../component/emitMount';\n\nexport default function updateDom(dom, vDom, parent) {\n  prepareVDom(vDom, parent[m].scope);\n\n  if (vDom && vDom.component) {\n    updateComponentDom(dom, vDom, parent);\n    return;\n  }\n\n  if (!sameTypeAndTag(dom, vDom)) {\n    if (dom[m] && dom[m].id) {\n      removeChild(parent, dom[m].id);\n    }\n\n    let newDom = createDom(vDom, parent);\n    dom.parentNode.replaceChild(newDom, dom);\n\n    if (parent[m].dom === dom) {\n      parent[m].dom = newDom;\n    }\n\n    return;\n  }\n\n  switch (dom.nodeType) {\n    case ELEMENT_NODE:\n      // Process attrs\n      let attrs = [];\n\n      if (dom[m].attrs) {\n        Object.keys(dom[m].attrs).forEach(attr => {\n          attrs.push(attr);\n        });\n      }\n\n      if (!dom[m].attrs) dom[m].attrs = {};\n\n      Object.keys(vDom.attrs).forEach(attr => {\n        if (vDom.attrs[attr] === null) {\n          dom.removeAttribute(attr);\n          delete dom[m].attrs[attr];\n        } else if (dom[attr] !== vDom.attrs[attr]) {\n          dom.setAttribute(attr, vDom.attrs[attr]);\n          dom[m].attrs[attr] = vDom.attrs[attr];\n        }\n\n        let index = attrs.indexOf(attr);\n        if (index > -1) {\n          attrs.splice(index, 1);\n        }\n      });\n\n      attrs.forEach(attr => {\n        dom.removeAttribute(attr);\n        delete dom[m].attrs[attr];\n      });\n\n      // Process props\n      let props = [];\n\n      if (dom[m].props) {\n        Object.keys(dom[m].props).forEach(prop => {\n          props.push(prop);\n        });\n      }\n\n      if (!dom[m].props) dom[m].props = {};\n\n      Object.keys(vDom.props).forEach(prop => {\n        if (vDom.props[prop] === null) {\n          dom[prop] = null;\n          delete dom[m].props[prop];\n        } else if (dom[prop] !== vDom.props[prop]) {\n          dom[prop] = vDom.props[prop];\n          dom[m].props[prop] = vDom.props[prop];\n        }\n\n        let index = props.indexOf(prop);\n        if (index > -1) {\n          props.splice(index, 1);\n        }\n      });\n\n      props.forEach(prop => {\n        dom[prop] = null;\n        delete dom[m].props[prop];\n      });\n\n      // Process child nodes\n      if (!vDom.children) vDom.children = [];\n\n      vDom.children.forEach((child, index) => {\n        if (!dom.childNodes[index]) {\n          let childDom = createDom(child, parent);\n          dom.appendChild(childDom);\n\n          if (parent[m].mounted && childDom[m] && childDom[m].id) {\n            emitMount(parent[m].children[id]);\n          }\n        } else {\n          updateDom(dom.childNodes[index], child, parent);\n        }\n      });\n\n      while (dom.childNodes[vDom.children.length]) {\n        let child = dom.childNodes[vDom.children.length];\n        dom.removeChild(child);\n      }\n\n      // Run ref function\n      if (vDom.ref) vDom.ref(dom);\n\n      break;\n\n    case TEXT_NODE:\n      if (dom.nodeValue !== vDom) {\n        dom.nodeValue = vDom;\n      }\n      break;\n  }\n}\n","import { COMMENT_NODE, ELEMENT_NODE, TEXT_NODE } from '../constants';\n\nexport default function sameTypeAndTag(dom, vDom) {\n  if (!vDom) return dom.nodeType === COMMENT_NODE;\n\n  if (typeof vDom === 'object' && dom.nodeType === ELEMENT_NODE) {\n    return vDom.tag.toUpperCase() === dom.tagName;\n  } else if (typeof vDom === 'string' && dom.nodeType === TEXT_NODE) {\n    return true;\n  }\n\n  return false;\n}\n","import { INTERNAL_VAR_NAME as m } from '../constants';\nimport emitHook from './emitHook';\n\nexport default function removeChild(parent, id) {\n  if (parent[m].children[id]) {\n    let component = parent[m].children[id];\n\n    emitHook(component, 'willRemove');\n    delete component[m].dom;\n\n    Object.keys(component[m].children).forEach(id => {\n      removeChild(id, component);\n    });\n\n    emitHook(component, 'didRemove');\n    delete parent[m].children[id];\n  }\n}\n","export default class ModesteError extends Error {\n  constructor(...args) {\n    super(...args);\n    this.name = 'MODESTE Error';\n    this.message = '[MODESTE ERROR] ' + this.message;\n    Error.captureStackTrace(this, modesteError);\n  }\n}\n","import { INTERNAL_VAR_NAME as m } from '../constants';\nimport emitHook from './emitHook';\nimport t from '../render/tag';\nimport c from '../render/component';\nimport createDom from '../dom/createDom';\nimport updateDom from '../dom/updateDom';\nimport ModesteError from '../utils/ModesteError';\n\nexport default function render(component) {\n  const mounting = !component[m].dom;\n\n  if (mounting) emitHook(component, 'willMount');\n  else emitHook(component, 'willUpdate');\n\n  let vDom = component[m].render(t, c);\n\n  if (typeof vDom !== 'object' || vDom.component || !vDom.tag) {\n    throw new ModesteError(\n      `${component[m].name}: Component root must be a tag`\n    );\n  }\n\n  if (mounting) {\n    component[m].dom = createDom(vDom, component, true);\n  } else {\n    updateDom(component[m].dom, vDom, component, true);\n  }\n\n  component[m].dom[m].id = component[m].id;\n\n  if (!mounting) emitHook(component, 'didUpdate');\n}\n","import { INTERNAL_VAR_NAME as m } from '../constants';\nimport shouldUpdateData from './shouldUpdateData';\nimport shouldUpdateProps from './shouldUpdateProps';\nimport registerHooks from './registerHooks';\nimport emitHook from './emitHook';\nimport registerComponent from './registerComponent';\nimport render from './render';\n\nexport default class Component {\n  constructor(opts, parent) {\n    this[m] = {};\n\n    if (!opts.manifest.factories) opts.manifest.factories = {};\n\n    this[m].factories = opts.manifest.factories;\n    this[m].parent = parent;\n    this[m].app = parent ? parent[m].app : this;\n    this[m].name = opts.name;\n    this[m].id = opts.id;\n    this[m].scope = opts.scope;\n    this[m].children = {};\n    this[m].props = opts.props ? opts.props : {};\n\n    this[m].render = opts.manifest.render.bind(this);\n    this[m].shouldUpdateData = shouldUpdateData;\n    this[m].shouldUpdateProps = shouldUpdateProps;\n\n    registerHooks(this, opts.manifest);\n    emitHook(this, 'willCreate');\n\n    if (opts.manifest.data) {\n      this[m].data = opts.manifest.data();\n\n      Object.keys(this[m].data).forEach(prop =>\n        Object.defineProperty(this, prop, {\n          enumerable: true,\n          get: function() {\n            return this[m].data[prop];\n          },\n          set: function(value) {\n            if (this[m].shouldUpdateData(this[m].data[prop], value)) {\n              this[m].data[prop] = value;\n              render(this);\n            }\n          }\n        })\n      );\n    }\n\n    if (opts.manifest.components) {\n      Object.keys(opts.manifest.components).forEach(name => {\n        registerComponent(this, name, opts.manifest.components[name]);\n      });\n    }\n\n    if (opts.manifest.methods) {\n      Object.keys(opts.manifest.methods).forEach(method => {\n        this[method] = opts.manifest.methods[method].bind(this);\n      });\n    }\n\n    emitHook(this, 'didCreate');\n  }\n\n  render() {\n    render(this);\n  }\n\n  get props() {\n    return this[m].props;\n  }\n}\n","import { INTERNAL_VAR_NAME as m } from '../constants';\nimport Component from './Component';\nimport generateScope from './generateScope';\nimport generateId from '../utils/generateId';\nimport addStyles from '../dom/addStyles';\n\nexport default function registerComponent(parent, name, manifest) {\n  if (!parent[m].factories[name]) {\n    let scope = generateScope(name);\n\n    addStyles(manifest.style(), scope);\n\n    parent[m].factories[name] = (props, parent) => {\n      let id = generateId(1000000, parent[m].children);\n\n      let component = new Component(\n        {\n          name,\n          manifest,\n          scope,\n          id,\n          props\n        },\n        parent\n      );\n\n      parent[m].children[id] = component;\n\n      return component;\n    };\n  }\n}\n","import { ROOT_NAME, INTERNAL_VAR_NAME as m } from './constants';\nimport Component from './component/Component';\nimport generateScope from './component/generateScope';\nimport addStyles from './dom/addStyles';\nimport emitMount from './component/emitMount';\n\nlet scope = generateScope(ROOT_NAME);\n\nexport default class Modeste extends Component {\n  constructor(manifest, props) {\n    super({\n      name: ROOT_NAME,\n      id: ROOT_NAME,\n      manifest,\n      props,\n      scope\n    });\n\n    if (manifest.style) addStyles(manifest.style(), scope);\n    this[m].wrap = manifest.selector\n      ? document.querySelector(manifest.selector)\n      : null;\n  }\n\n  render() {\n    super.render();\n\n    if (!this[m].mounted && !this[m].wrap) return emitMount(this);\n\n    if (this[m].wrap && this[m].wrap.childNodes.length === 0) {\n      this[m].wrap.appendChild(this[m].dom);\n      emitMount(this);\n    }\n  }\n\n  get $dom() {\n    return this[m].dom;\n  }\n}\n"],"names":["ROOT_NAME","INTERNAL_VAR_NAME","COMMENT_NODE","window","Node","ELEMENT_NODE","TEXT_NODE","strictEqual","a","b","shouldUpdateData","oldValue","newValue","shouldUpdateProps","oldProps","newProps","aKeys","Object","keys","bKeys","length","i","key","indexOf","shallowCompare","HOOKS","emitHook","component","hook","m","generateId","maxValue","store","middleware","id","Math","random","toFixed","scopes","generateScope","name","addStyles","style","scope","styleElement","document","createElement","repl","textContent","replace","head","appendChild","tag","opts","children","props","attrs","node","forEach","substr","prepareVDom","vDom","kebabAttrs","str","attr","toLowerCase","className","class","createComponent","parent","factories","app","emitMount","mounted","createDom","createComment","createTextNode","ref","dom","setAttribute","prop","childDom","child","updateComponentDom","removeChild","updateDom","nodeType","toUpperCase","tagName","newDom","parentNode","replaceChild","push","removeAttribute","index","splice","childNodes","nodeValue","ModesteError","args","message","_this","captureStackTrace","modesteError","Error","render","mounting","t","c","Component","manifest","this","bind","data","defineProperty","value","components","methods","method","wrap","selector","querySelector"],"mappings":"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"}